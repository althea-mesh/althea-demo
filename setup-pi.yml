---
# Ansible playbook for preparing an rpi to run babel + Althea demo on startup

 - hosts: pi
   remote_user: pi
   vars:
     - local_home: "{{ lookup('env', 'HOME') }}"
     - key_path: "{{ lookup('file', '{{local_home}}/.ssh/id_rsa.pub') }}"
   tasks:

      - name: Set authorized key
        authorized_key:
          user: pi
          state: present
          key: "{{ key_path }}"

      - name: Disallow password authentication
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^PasswordAuthentication"
          line: "PasswordAuthentication no"
          state: present
        become: True

      - name: Install Apt packages
        apt:
          name: "{{item}}"
          state: latest
          update_cache: yes
          autoclean: yes
          autoremove: yes
          cache_valid_time: 3600
        become: true
        with_flattened:
          - python-numpy
          - python-pip
          - python-smbus
          - python-dev
          - libi2c-dev
          - i2c-tools
          - git
          - gcc
          - vim

      # This does not need become, raspbian handles user packages for python
      # differently from fedora/ubuntu etc also causes problems with the pip module
      - name: Install Python Packages
        shell: "sudo pip install {{item}}"
        with_items:
          - git+https://github.com/adafruit/Adafruit_Python_CharLCD.git#egg=Adafruit_CharLCD
          - RPi.GPIO
          - procfs

      - name: Allow i2c in boot config
        lineinfile:
          path: /boot/config.txt
          line: "{{item}}"
          state: present
        become: true
        with_items:
          - dtparam=i2c_arm=on

      - name: Setup i2c and ipv6 kernel module to load on startup
        lineinfile:
          path: /etc/modules
          line: "{{item}}"
          state: present
        become: true
        with_items:
          - i2c-dev
          - ipv6
          - 8192cu

      - name: Delete old babeld repo if it exists
        file:
          path: "{{ansible_env.HOME}}/babeld"
          state: absent
        become: true

      # Trying to replace the babel binary while it's running locks up the pi
      - name: Kill services if running
        service: "name={{item}} state=stopped"
        become: true
        with_items:
          - babeld
          - althea-demo
        ignore_errors: True

      - name: Clone Althea branch of Babeld
        git:
          repo: https://github.com/althea-mesh/babeld
          dest: "{{ansible_env.HOME}}/babeld"

      - name: Copy user interface script
        copy:
          src: user-interface.py
          dest: "/home/pi/user-interface.py"

      - name: Build Babeld
        shell: "cd {{ansible_env.HOME}}/babeld; \
                git checkout origin/althea; \
                make clean; \
                make -j8"

      - name: Install Babeld
        shell: "cd {{ansible_env.HOME}}/babeld; \
                sudo make install"

      - name: Template service files
        template:
          src: "{{item}}"
          dest: /etc/systemd/system/
        become: true
        with_items:
          - babeld.service
          - althea-demo.service

      - name: Template startup script
        template:
          src: start-babel.sh
          dest: "{{ansible_env.HOME}}/start-babel.sh"

      - name: Enable the services to run at startup
        service: "name={{item}} enabled=true"
        become: true
        with_items:
          - babeld
          - althea-demo

      - name: Rebooting ...
        shell: sleep 1 & sudo reboot now
        async: 1
        poll: 0
        ignore_errors: true

      - name: Wait for pi to boot
        become: false
        local_action: wait_for
        args:
          host: "{{ inventory_hostname }}"
          port: 22
          state: started
          delay: 30
          timeout: 180
